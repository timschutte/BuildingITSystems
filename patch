diff --git a/README.md b/README.md
new file mode 100644
index 0000000..b4d0176
--- /dev/null
+++ b/README.md
@@ -0,0 +1,3 @@
+# BuildingITSystems
+This is a webapp project that mainly uses Django as a backend framework for building the website.
+The webapp aims to function as a scheduling event planner similar to calenders in Microsoft Teams that has messaging/group chat function.
diff --git a/SchedulingBITS/SchedulingBITS/__pycache__/settings.cpython-39.pyc b/SchedulingBITS/SchedulingBITS/__pycache__/settings.cpython-39.pyc
index 0ea08cf..a0cf1c6 100644
Binary files a/SchedulingBITS/SchedulingBITS/__pycache__/settings.cpython-39.pyc and b/SchedulingBITS/SchedulingBITS/__pycache__/settings.cpython-39.pyc differ
diff --git a/SchedulingBITS/SchedulingBITS/__pycache__/urls.cpython-39.pyc b/SchedulingBITS/SchedulingBITS/__pycache__/urls.cpython-39.pyc
index e7515c6..222f8d3 100644
Binary files a/SchedulingBITS/SchedulingBITS/__pycache__/urls.cpython-39.pyc and b/SchedulingBITS/SchedulingBITS/__pycache__/urls.cpython-39.pyc differ
diff --git a/SchedulingBITS/SchedulingBITS/__pycache__/wsgi.cpython-39.pyc b/SchedulingBITS/SchedulingBITS/__pycache__/wsgi.cpython-39.pyc
index 12679f9..b3c3cb0 100644
Binary files a/SchedulingBITS/SchedulingBITS/__pycache__/wsgi.cpython-39.pyc and b/SchedulingBITS/SchedulingBITS/__pycache__/wsgi.cpython-39.pyc differ
diff --git a/SchedulingBITS/SchedulingBITS/asgi.py b/SchedulingBITS/SchedulingBITS/asgi.py
index 73ff533..fcebd34 100644
--- a/SchedulingBITS/SchedulingBITS/asgi.py
+++ b/SchedulingBITS/SchedulingBITS/asgi.py
@@ -1,16 +1,16 @@
-"""
-ASGI config for SchedulingBITS project.
-
-It exposes the ASGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.1/howto/deployment/asgi/
-"""
-
-import os
-
-from django.core.asgi import get_asgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'SchedulingBITS.settings')
-
-application = get_asgi_application()
+"""
+ASGI config for SchedulingBITS project.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.1/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'SchedulingBITS.settings')
+
+application = get_asgi_application()
diff --git a/SchedulingBITS/SchedulingBITS/settings.py b/SchedulingBITS/SchedulingBITS/settings.py
index 3e213ce..3c29c94 100644
--- a/SchedulingBITS/SchedulingBITS/settings.py
+++ b/SchedulingBITS/SchedulingBITS/settings.py
@@ -1,123 +1,124 @@
-"""
-Django settings for SchedulingBITS project.
-
-Generated by 'django-admin startproject' using Django 4.1.3.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.1/topics/settings/
-
-For the full list of settings and their values, see
-https://docs.djangoproject.com/en/4.1/ref/settings/
-"""
-
-from pathlib import Path
-
-# Build paths inside the project like this: BASE_DIR / 'subdir'.
-BASE_DIR = Path(__file__).resolve().parent.parent
-
-
-# Quick-start development settings - unsuitable for production
-# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/
-
-# SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = 'django-insecure-+#6$^3v%vt!w#onb$q-*xhsr&l2c&1g6i64r=e5%w8$ye21f*d'
-
-# SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
-
-ALLOWED_HOSTS = []
-
-
-# Application definition
-
-INSTALLED_APPS = [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-]
-
-MIDDLEWARE = [
-    'django.middleware.security.SecurityMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-]
-
-ROOT_URLCONF = 'SchedulingBITS.urls'
-
-TEMPLATES = [
-    {
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.debug',
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    },
-]
-
-WSGI_APPLICATION = 'SchedulingBITS.wsgi.application'
-
-
-# Database
-# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': BASE_DIR / 'db.sqlite3',
-    }
-}
-
-
-# Password validation
-# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
-
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
-
-
-# Internationalization
-# https://docs.djangoproject.com/en/4.1/topics/i18n/
-
-LANGUAGE_CODE = 'en-us'
-
-TIME_ZONE = 'UTC'
-
-USE_I18N = True
-
-USE_TZ = True
-
-
-# Static files (CSS, JavaScript, Images)
-# https://docs.djangoproject.com/en/4.1/howto/static-files/
-
-STATIC_URL = 'static/'
-
-# Default primary key field type
-# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
-
-DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
+"""
+Django settings for SchedulingBITS project.
+
+Generated by 'django-admin startproject' using Django 4.1.3.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.1/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/4.1/ref/settings/
+"""
+
+from pathlib import Path
+
+# Build paths inside the project like this: BASE_DIR / 'subdir'.
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'django-insecure-+#6$^3v%vt!w#onb$q-*xhsr&l2c&1g6i64r=e5%w8$ye21f*d'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'scheduling.apps.SchedulingConfig',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'SchedulingBITS.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'SchedulingBITS.wsgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
+}
+
+
+# Password validation
+# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/4.1/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/4.1/howto/static-files/
+
+STATIC_URL = 'static/'
+
+# Default primary key field type
+# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
+
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
diff --git a/SchedulingBITS/SchedulingBITS/urls.py b/SchedulingBITS/SchedulingBITS/urls.py
index 9911f40..c048908 100644
--- a/SchedulingBITS/SchedulingBITS/urls.py
+++ b/SchedulingBITS/SchedulingBITS/urls.py
@@ -1,23 +1,24 @@
-"""SchedulingBITS URL Configuration
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/4.1/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
-from django.contrib import admin
-from django.urls import path, include
-
-urlpatterns = [
-    path('admin/', admin.site.urls),
-]
-
-
+"""SchedulingBITS URL Configuration
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/4.1/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+from django.contrib import admin
+from django.urls import path, include
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+    path('', include('scheduling.urls'))
+]
+
+
diff --git a/SchedulingBITS/SchedulingBITS/wsgi.py b/SchedulingBITS/SchedulingBITS/wsgi.py
index 4e2d1c3..37c2f4f 100644
--- a/SchedulingBITS/SchedulingBITS/wsgi.py
+++ b/SchedulingBITS/SchedulingBITS/wsgi.py
@@ -1,16 +1,16 @@
-"""
-WSGI config for SchedulingBITS project.
-
-It exposes the WSGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.1/howto/deployment/wsgi/
-"""
-
-import os
-
-from django.core.wsgi import get_wsgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'SchedulingBITS.settings')
-
-application = get_wsgi_application()
+"""
+WSGI config for SchedulingBITS project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.1/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'SchedulingBITS.settings')
+
+application = get_wsgi_application()
diff --git a/SchedulingBITS/scheduling/__init__.py b/SchedulingBITS/scheduling/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/SchedulingBITS/scheduling/__pycache__/__init__.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/__init__.cpython-39.pyc
new file mode 100644
index 0000000..c6276fb
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/__init__.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/__pycache__/admin.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/admin.cpython-39.pyc
new file mode 100644
index 0000000..ede64d6
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/admin.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/__pycache__/apps.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/apps.cpython-39.pyc
new file mode 100644
index 0000000..6dcb275
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/apps.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/__pycache__/models.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/models.cpython-39.pyc
new file mode 100644
index 0000000..685c882
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/models.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/__pycache__/urls.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/urls.cpython-39.pyc
new file mode 100644
index 0000000..f358408
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/urls.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/__pycache__/views.cpython-39.pyc b/SchedulingBITS/scheduling/__pycache__/views.cpython-39.pyc
new file mode 100644
index 0000000..eacf0c8
Binary files /dev/null and b/SchedulingBITS/scheduling/__pycache__/views.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/admin.py b/SchedulingBITS/scheduling/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/SchedulingBITS/scheduling/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/SchedulingBITS/scheduling/apps.py b/SchedulingBITS/scheduling/apps.py
new file mode 100644
index 0000000..6d9e889
--- /dev/null
+++ b/SchedulingBITS/scheduling/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class SchedulingConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'scheduling'
diff --git a/SchedulingBITS/scheduling/migrations/0001_initial.py b/SchedulingBITS/scheduling/migrations/0001_initial.py
new file mode 100644
index 0000000..b77ba6e
--- /dev/null
+++ b/SchedulingBITS/scheduling/migrations/0001_initial.py
@@ -0,0 +1,63 @@
+# Generated by Django 4.1.3 on 2022-12-05 09:41
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Membership',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='User',
+            fields=[
+                ('id', models.AutoField(primary_key=True, serialize=False)),
+                ('name', models.CharField(max_length=100)),
+                ('email', models.EmailField(max_length=254)),
+                ('phone', models.CharField(max_length=100)),
+                ('password', models.CharField(max_length=100)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Team',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+                ('description', models.TextField()),
+                ('members', models.ManyToManyField(through='scheduling.Membership', to='scheduling.user')),
+            ],
+        ),
+        migrations.AddField(
+            model_name='membership',
+            name='team',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.team'),
+        ),
+        migrations.AddField(
+            model_name='membership',
+            name='user',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.user'),
+        ),
+        migrations.CreateModel(
+            name='Appointment',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+                ('description', models.TextField()),
+                ('start_time', models.DateTimeField()),
+                ('end_time', models.DateTimeField()),
+                ('location', models.CharField(max_length=100)),
+                ('hyperlink', models.URLField()),
+                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.user')),
+            ],
+        ),
+    ]
diff --git a/SchedulingBITS/scheduling/migrations/__init__.py b/SchedulingBITS/scheduling/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/SchedulingBITS/scheduling/migrations/__pycache__/0001_initial.cpython-39.pyc b/SchedulingBITS/scheduling/migrations/__pycache__/0001_initial.cpython-39.pyc
new file mode 100644
index 0000000..93eae7f
Binary files /dev/null and b/SchedulingBITS/scheduling/migrations/__pycache__/0001_initial.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/migrations/__pycache__/__init__.cpython-39.pyc b/SchedulingBITS/scheduling/migrations/__pycache__/__init__.cpython-39.pyc
new file mode 100644
index 0000000..4c82545
Binary files /dev/null and b/SchedulingBITS/scheduling/migrations/__pycache__/__init__.cpython-39.pyc differ
diff --git a/SchedulingBITS/scheduling/models.py b/SchedulingBITS/scheduling/models.py
new file mode 100644
index 0000000..4827469
--- /dev/null
+++ b/SchedulingBITS/scheduling/models.py
@@ -0,0 +1,43 @@
+from django.db import models
+
+class User(models.Model):
+    id = models.AutoField(primary_key=True)
+    name = models.CharField(max_length=100)
+    email = models.EmailField()
+    phone = models.CharField(max_length=100)
+    password = models.CharField(max_length=100)
+    def __str__(self):
+        return self.name
+
+class Appointment(models.Model):
+    name = models.CharField(max_length=100)
+    user = models.ForeignKey(User, on_delete=models.CASCADE)
+    description = models.TextField()
+    start_time = models.DateTimeField()
+    end_time = models.DateTimeField()
+    location = models.CharField(max_length=100)
+    hyperlink = models.URLField()
+    def __str__(self):
+        return self.name
+    
+
+
+class Team(models.Model):
+    name = models.CharField(max_length=100)
+    members = models.ManyToManyField(User, through='Membership')
+    description = models.TextField()
+    def __str__(self):
+        return self.name
+
+class Membership(models.Model):
+    user = models.ForeignKey(User,on_delete=models.CASCADE)
+    team = models.ForeignKey(Team,on_delete=models.CASCADE)
+    def __str__(self) -> str:
+        return super().__str__()
+
+def findAppointments(start, end, user):
+    return Appointment.objects.get('SELECT * FROM Appointment WHERE (start_time BETWEEN start AND end) OR (end_time BETWEEN start AND end) AND user = user;')
+
+def findAvailability(start, end, name):
+    users = Appointment.objects.get('SELECT members FROM Team WHERE name = name;')
+    
diff --git a/SchedulingBITS/scheduling/templates/scheduling/about.html b/SchedulingBITS/scheduling/templates/scheduling/about.html
new file mode 100644
index 0000000..421c78a
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/about.html
@@ -0,0 +1,9 @@
+{% extends 'base.html' %}
+
+{% block title%} About {% endblock %}
+
+{% block content%}
+<h1>
+    About Us
+</h1>
+{% endblock %}
\ No newline at end of file
diff --git a/SchedulingBITS/scheduling/templates/scheduling/base.html b/SchedulingBITS/scheduling/templates/scheduling/base.html
new file mode 100644
index 0000000..cf96fcb
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/base.html
@@ -0,0 +1,35 @@
+{% load static%}
+<!DOCTYPE html>
+<html>
+    <head>
+        <meta charset="utf-8">
+        <title>{% block title%}Scheduling{% endblock %} </title>
+
+        <meta charset="utf-8" />
+        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
+        <meta name="description" content="" />
+        <meta name="author" content="" />
+        <!-- Font Awesome icons (free version)-->
+        <script src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
+        <!-- Google fonts-->
+        <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
+        <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css" />
+        <!-- Core theme CSS (includes Bootstrap)-->
+        <link href="{% static 'theme/css/styles.css' %}" rel="stylesheet" />
+        <link href="{% static 'css/main.css' %}" rel="stylesheet" />
+
+    </head>
+    <body>
+        {% include 'scheduling/navbar.html'%}
+        <main id="main">
+            {% block content%}
+            {% endblock %}
+        </main>
+        <!-- Bootstrap core JS-->
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
+        <!-- Core theme JS-->
+        <script src="{% static 'theme/js/scripts.js' %}"></script>
+    </body>
+</html>
+
+
diff --git a/SchedulingBITS/scheduling/templates/scheduling/index.html b/SchedulingBITS/scheduling/templates/scheduling/index.html
new file mode 100644
index 0000000..38ba329
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/index.html
@@ -0,0 +1,20 @@
+{% extends 'scheduling/base.html' %}
+{% load static%}
+
+{% block title%} Home {% endblock %}
+
+{% block content%}
+<!-- Masthead-->
+<header class="masthead text-white text-center">
+    <div class="container d-flex align-items-center flex-column">
+        <!-- Masthead Avatar Image-->
+        <img class="masthead-avatar mb-5" src="{% static 'img/weschedule.png.png' %}" alt="" />
+        <!-- Masthead Heading-->
+        <h1 class="masthead-heading text-uppercase mb-0"><center>Create a Schedule</center></h1>
+        
+    </div>
+</header>
+<h1>
+    Home
+</h1>
+{% endblock %}
\ No newline at end of file
diff --git a/SchedulingBITS/scheduling/templates/scheduling/messages.html b/SchedulingBITS/scheduling/templates/scheduling/messages.html
new file mode 100644
index 0000000..45c0824
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/messages.html
@@ -0,0 +1,9 @@
+{% extends 'base.html' %}
+
+{% block title%} Messages {% endblock %}
+
+{% block content%}
+<h1>
+    Messages
+</h1>
+{% endblock %}
\ No newline at end of file
diff --git a/SchedulingBITS/scheduling/templates/scheduling/navbar.html b/SchedulingBITS/scheduling/templates/scheduling/navbar.html
new file mode 100644
index 0000000..4f42b7b
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/navbar.html
@@ -0,0 +1,33 @@
+{% url 'index' as index_url %}
+{% url 'schedule' as schedule_url %}
+{% url 'messages' as about_url %}
+
+<nav class="navbar navbar-expand-lg text-uppercase fixed-top" id="mainNav">
+    <div class="container">
+        <a class="navbar-brand" href="index.html">WeSchedule</a>
+        <button class="navbar-toggler text-uppercase font-weight-bold hs-bg-primary text-white rounded" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
+            Menu
+            <i class="fas fa-bars"></i>
+        </button>
+        <div class="collapse navbar-collapse" id="navbarResponsive">
+            <ul class="navbar-nav ms-auto">
+                <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3  {% if request.path == index_url %} active {% endif %}" href="">Home</a></li>
+                
+                <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3  {% if request.path == schedule_url %} active {% endif %}" href="schedule.html">Schedule</a></li>
+                
+                <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3  {% if request.path == about_url %} active {% endif %}" href="about.html">About Us</a></li>
+            </ul>
+        </div>
+    </div>
+</nav>
+
+
+{% comment %} <nav>
+    {% url 'index' as index_url %}
+    <span>{% if request.path == index_url %} Home {% else %}<a href = "{% url 'index' %}">Home</a>{% endif %}</span>
+    <span><a href = "{% url 'profile' %}">Profile</a></span>
+    {% url 'schedule' as schedule_url %}
+    <span>{% if request.path == schedule_url %} Schedule {% else %}<a href = "{% url 'schedule' %}">Schedules</a>{% endif%}</span>
+    {% url 'messages' as messages_url %}
+    <span>{% if request.path == messages_url %} Messages {% else %}<a href = "{% url 'messages' %}">Messages</a>{% endif%}</span>
+</nav> {% endcomment %}
diff --git a/SchedulingBITS/scheduling/templates/scheduling/profile.html b/SchedulingBITS/scheduling/templates/scheduling/profile.html
new file mode 100644
index 0000000..2c836be
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/profile.html
@@ -0,0 +1,9 @@
+{% extends 'base.html' %}
+
+{% block title%} Profile {% endblock %}
+
+{% block content%}
+<h1>
+    Profile
+</h1>
+{% endblock %}
\ No newline at end of file
diff --git a/SchedulingBITS/scheduling/templates/scheduling/schedule.html b/SchedulingBITS/scheduling/templates/scheduling/schedule.html
new file mode 100644
index 0000000..a284916
--- /dev/null
+++ b/SchedulingBITS/scheduling/templates/scheduling/schedule.html
@@ -0,0 +1,9 @@
+{% extends 'base.html' %}
+
+{% block title%} Schedules {% endblock %}
+
+{% block content%}
+<h1>
+    Your Schedules
+</h1>
+{% endblock %}
\ No newline at end of file
diff --git a/SchedulingBITS/scheduling/tests.py b/SchedulingBITS/scheduling/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/SchedulingBITS/scheduling/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/SchedulingBITS/scheduling/urls.py b/SchedulingBITS/scheduling/urls.py
new file mode 100644
index 0000000..39431c0
--- /dev/null
+++ b/SchedulingBITS/scheduling/urls.py
@@ -0,0 +1,8 @@
+from django.urls import path
+from . import views
+
+urlpatterns = [
+    path('', views.home, name='home'),
+]
+
+
diff --git a/SchedulingBITS/scheduling/views.py b/SchedulingBITS/scheduling/views.py
new file mode 100644
index 0000000..83afd2a
--- /dev/null
+++ b/SchedulingBITS/scheduling/views.py
@@ -0,0 +1,8 @@
+from django.shortcuts import render
+
+def login(response):
+    pass
+
+def home(response):
+    return render(response,"scheduling/index.html")
+    
